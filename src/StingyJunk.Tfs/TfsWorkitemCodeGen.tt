<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.Interop.8.0" #>
<#@ assembly Name="EnvDTE" #>
<#@ assembly name="System.Reflection" #>
<#@ assembly name="$(SolutionDir)\packages\Microsoft.TeamFoundationServer.Client.14.102.0\lib\net45\Microsoft.TeamFoundation.WorkItemTracking.WebApi.dll"#>
<#@ assembly name="$(SolutionDir)\packages\Microsoft.VisualStudio.Services.Client.14.102.0\lib\net45\Microsoft.TeamFoundation.Common.dll"#>
<#@ assembly name="$(SolutionDir)\packages\Microsoft.TeamFoundationServer.Client.14.102.0\lib\net45\Microsoft.TeamFoundation.Core.WebApi.dll"#>
<#@ assembly name="$(SolutionDir)\packages\Microsoft.VisualStudio.Services.InteractiveClient.14.102.0\lib\net45\Microsoft.VisualStudio.Services.Client.dll"#>
<#@ assembly name="$(SolutionDir)\packages\Microsoft.VisualStudio.Services.Client.14.102.0\lib\net45\Microsoft.VisualStudio.Services.Common.dll"#>
<#@ assembly name="$(SolutionDir)\packages\Microsoft.Extensions.Configuration.Abstractions.1.0.0\lib\netstandard1.0\Microsoft.Extensions.Configuration.Abstractions.dll"#>
<#@ assembly name="$(SolutionDir)\packages\Microsoft.Extensions.FileProviders.Physical.1.1.0\lib\net451\Microsoft.Extensions.FileProviders.Physical.dll"#>
<#@ assembly name="$(SolutionDir)\packages\Microsoft.Extensions.FileProviders.Abstractions.1.1.0\lib\netstandard1.0\Microsoft.Extensions.FileProviders.Abstractions.dll"#>
<#@ assembly name="$(SolutionDir)\packages\Newtonsoft.Json.9.0.1\lib\net45\Newtonsoft.Json.dll"#>
<#@ assembly name="$(SolutionDir)\StingyJunk\bin\RegenCodeFiles\StingyJunk.dll" #>

<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="Microsoft.VisualStudio.Shell.Interop" #>

<#@ output extension=".cs" #>

<#@ include file="CodeGenHelpers.ttinclude" #>
<#@ include file="TfsMetadataProvider.ttinclude" #>
<#



// You have to select RegenCodeFiles solution configuration to get this to regenerate. 
//  1) Compile code as Debug or Release
//	2) Change to RegenCodeFiles
//	3) init codegen by Save or "Run Custom Tool"

// T4VSHostProcess.exe may lock files. 
// Kill it from task manager if you get "cannot copy file in use by another process"

    var regenHelper = new CodeGenHelpers(Host);
	regenHelper.SetupBinPathAssemblyResolution();
	var _ConfigName = regenHelper.GetConfigName();
	var _CurrentFolder = new FileInfo(Host.ResolvePath(Host.TemplateFile)).DirectoryName;

Directory.SetCurrentDirectory(_CurrentFolder);
Debug.WriteLine($"Using working folder {_CurrentFolder}");

if (regenHelper.ShouldRegenerate() == false)
{
	Debug.WriteLine($"Not Regenerating File");
	var existingFileName = Path.ChangeExtension(Host.TemplateFile, "cs"); 
	var fileContent = File.ReadAllText(existingFileName);
	return fileContent;
}
else
{
    
}

Debug.WriteLine($"Regenerating File");

//specify instance
//	foreach project collection
//		foreach project

//what level are these at?
//field constants
//workitem types
//	workitem construction from fieldlist

var _MetaProvider = new TfsMetadataProvider();

var _WiFields = _MetaProvider.GetFieldsAsync().GetAwaiter().GetResult();
var _Wits = _MetaProvider.GetWorkItemTypesAsync().GetAwaiter().GetResult();

var _jsonValue = Newtonsoft.Json.JsonConvert.SerializeObject(_Wits);

#>

/*
 *	This file is code generated by t4 template. Don't fuck with it manually.
 *	Thanks
 */
// ReSharper disable CheckNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable PartialTypeWithSinglePart
namespace StingyBot.Tfs.Models
{

	public static partial class FieldNames
	{
<#
	foreach (var wiField in _WiFields)
	{
#>
		/// <summary> A workitem field name constant </summary>
		public const string  <#= Helpers.MakeConstName(wiField) #> = "<#= wiField.ReferenceName #>";
<#
	}
#>	
	}

 }

 <#+

/*********** Helpers ************/

public static class Helpers 
{
	public static string MakeConstName(Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItemField wif)
	{
		var refName = wif.ReferenceName;
		var underscored = refName.Replace(".", "_");
		var cruiseControlForCool = underscored.ToUpper();
		return cruiseControlForCool;
	}
}


 #>